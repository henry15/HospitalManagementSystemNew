@using HospitalManagementSystemNew.Models
@model HospitalManagementSystemNew.Models.Patient

@{
    ViewBag.Title = "AddDoctor";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="row">
    <ol class="breadcrumb">
        <li>
            <a href="#">
                <em class="fa fa-home"></em>
            </a>
        </li>
        <li class="active">Patient</li>
        <li class="active">Add Patient</li>
    </ol>
</div>

<h2>Add Patient</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>
        @*<div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.ApplicationUser.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.ApplicationUser.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ApplicationUser.Email, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
        </div>

    </div>
        @*<div class="form-group">
            @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
            </div>
        </div>*@
        @*<div class="form-group">
            @Html.LabelFor(model => model..ContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Doctor.ContactNo, "", new { @class = "text-danger" })
            </div>
        </div>*@
        @{
            var bloodlist = new List<Doctor>
            {
                new Doctor {BloodGroup = "A+", Gender = "Male"},
                new Doctor {BloodGroup = "O+", Gender = "Female"},
                new Doctor {BloodGroup = "B+", Gender = "Other"},
                new Doctor {BloodGroup = "AB+"},
                new Doctor {BloodGroup = "A-"},
                new Doctor {BloodGroup = "O-"},
                new Doctor {BloodGroup = "B-"},
                new Doctor {BloodGroup = "AB-"}
            };
            var genderlist = new List<Doctor>
            {
                new Doctor {Gender = "Male"},
                new Doctor {Gender = "Female"},
                new Doctor {Gender = "Other"}
            };
            var statuslist = new List<Doctor>
            {
                new Doctor {Status = "Active"},
                new Doctor {Status = "Inactive"}
            };
        }
    <div class="form-group">
        @Html.LabelFor(model => model.BloodGroup, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.BloodGroup, new SelectList(bloodlist, "BloodGroup", "BloodGroup"), "Select Blood Group", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BloodGroup, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.Gender, new SelectList(genderlist, "Gender", "Gender"), "Select Gender", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>

    </div>
        @*<div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Gender, new SelectList(genderlist, "Gender", "Gender"), "Select Gender", new {@class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
            @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Doctor.Designation, "", new { @class = "text-danger" })
            </div>
        </div>*@
        @*<div class="form-group">
            @Html.LabelFor(model => model.Doctor.DepartmentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Doctor.DepartmentId, new SelectList(Model.Departments, "Id", "Name"), "Select Department", new { @id = "dropdown", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Doctor.DepartmentId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Doctor.Specialization, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Doctor.Specialization, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Doctor.Specialization, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Doctor.Education, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Doctor.Education, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Doctor.Education, "", new { @class = "text-danger" })
            </div>
        </div>*@
        @*<div class="form-group">
            @Html.LabelFor(model => model.Doctor.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Doctor.Status, new SelectList(statuslist, "Status", "Status"), "Select Status", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Doctor.Status, "", new { @class = "text-danger" })
            </div>
        </div>*@
        @*<div class="form-group">
            @Html.LabelFor(model => model.ApplicationUser.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicationUser.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicationUser.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationUser.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicationUser.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicationUser.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>*@
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ListOfPatients")
</div>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function() {
            $("#dropdown").chosen();
        });
    </script>
}
